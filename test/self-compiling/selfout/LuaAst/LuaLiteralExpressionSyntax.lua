-- Generated by CSharp.lua Compiler 1.0.0.0
local System = System
local MicrosoftCodeAnalysisCSharp = Microsoft.CodeAnalysis.CSharp
local CSharpLuaLuaAst
System.usingDeclare(function (global) 
    CSharpLuaLuaAst = CSharpLua.LuaAst
end)
System.namespace("CSharpLua.LuaAst", function (namespace) 
    namespace.class("LuaLiteralExpressionSyntax", function (namespace) 
        return {
            __inherits__ = function () 
                return {
                    CSharpLuaLuaAst.LuaExpressionSyntax
                }
            end
        }
    end)
    namespace.class("LuaIdentifierLiteralExpressionSyntax", function (namespace) 
        local getText, Render, __ctor1__, __ctor2__
        getText = function (this) 
            return this.Identifier.ValueText
        end
        Render = function (this, renderer) 
            renderer:Render14(this)
        end
        __ctor1__ = function (this, text) 
            __ctor2__(this, CSharpLuaLuaAst.LuaIdentifierNameSyntax:new(1, text))
        end
        __ctor2__ = function (this, identifier) 
            CSharpLuaLuaAst.LuaLiteralExpressionSyntax.__ctor__(this)
            this.Identifier = identifier
        end
        return {
            __inherits__ = function () 
                return {
                    CSharpLuaLuaAst.LuaLiteralExpressionSyntax
                }
            end, 
            getText = getText, 
            Render = Render, 
            __ctor__ = {
                __ctor1__, 
                __ctor2__
            }
        }
    end)
    namespace.class("LuaStringLiteralExpressionSyntax", function (namespace) 
        local getOpenParenToken, getCloseParenToken, getText, Render, Empty, __staticCtor__, __ctor__
        getOpenParenToken = function (this) 
            return "\"" --[[Tokens.Quote]]
        end
        getCloseParenToken = function (this) 
            return "\"" --[[Tokens.Quote]]
        end
        getText = function (this) 
            return this.Identifier.ValueText
        end
        Render = function (this, renderer) 
            renderer:Render15(this)
        end
        __staticCtor__ = function (this) 
            Empty = CSharpLuaLuaAst.LuaStringLiteralExpressionSyntax:new(1, CSharpLuaLuaAst.LuaIdentifierNameSyntax.Empty)
            this.Empty = Empty
        end
        __ctor__ = function (this, identifier) 
            CSharpLuaLuaAst.LuaLiteralExpressionSyntax.__ctor__(this)
            this.Identifier = identifier
        end
        return {
            __inherits__ = function () 
                return {
                    CSharpLuaLuaAst.LuaLiteralExpressionSyntax
                }
            end, 
            getOpenParenToken = getOpenParenToken, 
            getCloseParenToken = getCloseParenToken, 
            getText = getText, 
            Render = Render, 
            __staticCtor__ = __staticCtor__, 
            __ctor__ = __ctor__
        }
    end)
    namespace.class("LuaVerbatimStringLiteralExpressionSyntax", function (namespace) 
        local getText, setText, getOpenBracket, getCloseBracket, Render, __ctor__
        getText, setText = System.property("Text")
        getOpenBracket = function (this) 
            return "[" --[[Tokens.OpenBracket]]
        end
        getCloseBracket = function (this) 
            return "]" --[[Tokens.CloseBracket]]
        end
        Render = function (this, renderer) 
            renderer:Render16(this)
        end
        __ctor__ = function (this, text, equalsCount) 
            CSharpLuaLuaAst.LuaLiteralExpressionSyntax.__ctor__(this)
            setText(this, text)
            this.EqualsCount = equalsCount
        end
        return {
            __inherits__ = function () 
                return {
                    CSharpLuaLuaAst.LuaLiteralExpressionSyntax
                }
            end, 
            getText = getText, 
            setText = setText, 
            EqualsCount = 0, 
            getOpenBracket = getOpenBracket, 
            getCloseBracket = getCloseBracket, 
            Render = Render, 
            __ctor__ = __ctor__
        }
    end)
    namespace.class("LuaConstLiteralExpression", function (namespace) 
        local getOpenComment, getCloseComment, getText, Render, __ctor1__, __ctor2__
        getOpenComment = function (this) 
            return "--[[" --[[Tokens.OpenLongComment]]
        end
        getCloseComment = function (this) 
            return "]]" --[[Tokens.CloseDoubleBrace]]
        end
        getText = function (this) 
            return this.Value:getText()
        end
        Render = function (this, renderer) 
            renderer:Render17(this)
        end
        __ctor1__ = function (this, value, identifierToken) 
            __ctor2__(this, CSharpLuaLuaAst.LuaIdentifierLiteralExpressionSyntax:new(1, value), identifierToken)
        end
        __ctor2__ = function (this, value, identifierToken) 
            CSharpLuaLuaAst.LuaLiteralExpressionSyntax.__ctor__(this)
            this.Value = value
            this.IdentifierToken = identifierToken
        end
        return {
            __inherits__ = function () 
                return {
                    CSharpLuaLuaAst.LuaLiteralExpressionSyntax
                }
            end, 
            getOpenComment = getOpenComment, 
            getCloseComment = getCloseComment, 
            getText = getText, 
            Render = Render, 
            __ctor__ = {
                __ctor1__, 
                __ctor2__
            }
        }
    end)
    namespace.class("LuaCharacterLiteralExpression", function (namespace) 
        local GetIdentifierToken, __ctor__
        GetIdentifierToken = function (character) 
            return MicrosoftCodeAnalysisCSharp.SyntaxFactory.Literal(character):getText()
        end
        __ctor__ = function (this, character) 
            CSharpLuaLuaAst.LuaConstLiteralExpression.__ctor__[1](this, (System.cast(System.Int, character)):ToString(), GetIdentifierToken(character))
        end
        return {
            __inherits__ = function () 
                return {
                    CSharpLuaLuaAst.LuaConstLiteralExpression
                }
            end, 
            __ctor__ = __ctor__
        }
    end)
end)
